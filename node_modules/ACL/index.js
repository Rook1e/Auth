var async = require('async')

module.exports = (function(acl_path,policies_path){

  var ACL = require(acl_path)
  var policies = require(__dirname+'/../moduleloader/index.js').required({
    dirname:policies_path,
    filter:/(.+)\.(js|coffee)$/,
    replaceExpr:null
  })

  //debugger

  function middleware (req,res,next){
    var verb = req.verb
    var labels = []
      for(var path in ACL['*'] ){
          if(test_path(path,req.url)){
            ////debugger
            var _labels = ACL['*'][path]
            if(typeof _labels == 'string') _labels = [_labels]
            labels = labels.concat(_labels)
            ////debugger
        }
      }


    if(verb in ACL){
      for(var path in ACL[verb] ){
          if(test_path(path,req.url)){
            ////debugger
            var _labels = ACL[verb][path]
            if(typeof _labels == 'string') _labels = [_labels]
            labels = labels.concat(_labels)
            ////debugger
        }
      }
    }




      console.log(labels)
      debugger

    var actions = []
      labels.forEach(function(label){
        var action = get_policy(label,policies) 
        actions.push((function(action,req){
            return function(cb){
                action(req,(function(cb){
                    return function(err,result){
                        if( result.toString() != 'true') err = '-'
                        cb(err,result)
                    }
                })(cb))
            }
        })(action,req))
      })

      if(!actions.length) res.end('AUTH')


      async.series(actions,function(err,results){ 
        if(err == '-') {
          res.end('AUTH')
          return
        }
        if(err) throw new Error(err)
        req.ACL_passed = true;
        req.ACL_tests  = labels;
        debugger
        next()
      })

  }
 
  middleware.acl_path      = acl_path
  middleware.policies_path = policies_path

  return middleware
})


function get_policy(label,policies){
    if(!(label in policies) && typeof policies[label] != 'function ') throw new Error('ACL TRIED SOMETHING BAD')
    return policies[label]
}


module.exports.test_path = test_path = function (test,value){
   if( /^\/.*\/$/.test(test) ) test = new RegExp(test.slice(1,test.length -1)) 
   t=test
   if(typeof test=='string') return test == value
   return test.test(value)
}



