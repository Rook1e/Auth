module.exports   = (function (path_to_api){
  var Output ={}

  Output.attachGet  = function(app){ 
      debugger
     Output.GET.forEach(function(route){
      app.get(route._route,route)
    })
  }

  Output.attachPost = function(app){
    Output.POST.forEach(function(route){
      app.post(route._route,route)
    })
  }

  Output.attach     = function (app){
      Output.attachPost(app)
      Output.attachGet(app)
  }

  Output.describe = function(){
    var output = ['',
    ]
    console.log(output.join(''))
  }


   var GET_list = require('moduleloader').required({
      dirname:path_to_api+'/GET',
      filter: /(.+)\.(js)$/ // bug wont show file name as key if not set
   })

   var POST_list = require('moduleloader').required({
      dirname:path_to_api+'/POST',
      filter: /(.+)\.(js)$/ // bug wont show file name as key if not set
   })

    for(var key in GET_list){ 
      if(GET_list[key]._skip) continue
      if(!GET_list[key]._route) throw new Error('GET api functions must declare route')
      if(typeof GET_list[key]._weight != 'number') throw new Error('GET api missing weight')
    }

    for(var key in POST_list){
      if(POST_list[key]._skip) continue
      if(!GET_list[key]._route) throw new Error('POST api functions  must declare route')
      if(typeof POST_list[key]._weight != 'number') throw new Error('POST api missing weight')
    }

    var GET_sorted  = []
    var POST_sorted = []

    for(var key in GET_list){
      GET_sorted.push(GET_list[key])
    }
    for(var key in POST_list){
      POST_sorted.push(POST_list[key])
    }
 
     GET_sorted  =  GET_sorted.sort(function(x,y){ if(x._weight == y._weight) throw new Error('GET has two weights the same')  ;return x._weight > y._weight })
    POST_sorted  = POST_sorted.sort(function(x,y){ if(x._weight == y._weight) throw new Error('POST has two weights the same')  ;return x._weight > y._weight })
     
  Output.path_to_models = path_to_api
  Output.GET  =  GET_sorted
  Output.POST = POST_sorted    
    console.log(Output.GET)
    console.log(Output.POST)
  return Output
})


